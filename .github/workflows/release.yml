name: Build, Sign, Package, and Release DNSChanger

on:
  push:
    branches: [ "main" ]

permissions:
  contents: write

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Xcode
        run: sudo xcode-select -s /Applications/Xcode.app/Contents/Developer

      - name: Install XcodeGen
        run: brew install xcodegen

      - name: Generate Xcode Project
        working-directory: XcodeProject
        run: xcodegen generate

      - name: Build App
        working-directory: .
        run: xcodebuild -project XcodeProject/DNSChanger.xcodeproj -scheme DNSChanger -configuration Release -derivedDataPath DerivedData -destination "platform=macOS" CODE_SIGNING_ALLOWED=NO CODE_SIGNING_REQUIRED=NO build

      - name: Sign and Archive
        working-directory: .
        run: bash scripts/codesign_and_archive.sh
        env:
          DEVELOPER_ID_APP: ${{ secrets.DEVELOPER_ID_APP }}

      - name: Build PKG
        working-directory: .
        run: bash scripts/build_pkg.sh

      - name: Build DMG
        working-directory: .
        run: bash scripts/build_dmg.sh

      - name: Notarize Artifacts
        if: env.APPLE_ID != ''
        working-directory: .
        run: bash scripts/notarize.sh
        env:
          APPLE_ID: ${{ secrets.APPLE_ID }}
          APP_SPECIFIC_PASSWORD: ${{ secrets.APP_SPECIFIC_PASSWORD }}
          TEAM_ID: ${{ secrets.TEAM_ID }}

      - name: Verify Signature
        working-directory: .
        run: bash scripts/verify_signature.sh

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: DNSChanger-Build
          path: Build/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          name: "DNSChanger Build ${{ github.run_number }}"
          draft: false
          prerelease: false
          files: |
            Build/DNSChanger.app
            Build/DNSChanger.pkg
            Build/DNSChanger.dmg
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
